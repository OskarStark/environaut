{"name":"Environaut\\Config\\Reader\\Dom\\DomElement","line":12,"short_desc":"Custom \\DOMElement implementation for Environaut to have some convenience methods to get child nodes etc.","long_desc":"Please be aware, that\nby default these methods use the Environaut default namespace URI.","hint":null,"tags":{"todo":[["make","namespace","URI","configurable","for","convenience","methods"]]},"namespace":"Environaut\\Config\\Reader\\Dom","file":"\/home\/graste\/projects\/environaut\/src\/Environaut\/Config\/Reader\/Dom\/DomElement.php","hash":"d7a45840f8fdcc33178ed2b40a785d23f10dc8ad","parent":"DOMElement","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"IteratorAggregate":"IteratorAggregate"},"properties":[],"methods":{"__toString":{"name":"__toString","line":24,"short_desc":"Returns the nodeValue of the element.","long_desc":"","hint":[["string",false]],"hint_desc":"nodeValue of the element","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":[]},"getName":{"name":"getName","line":34,"short_desc":"Returns the nodeName of the element.","long_desc":"","hint":[["string",false]],"hint_desc":"nodeName of the element","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":[]},"getValue":{"name":"getValue","line":44,"short_desc":"Returns the nodeValue of the element.","long_desc":"","hint":[["string",false]],"hint_desc":"nodeValue of the element","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":[]},"getIterator":{"name":"getIterator","line":54,"short_desc":"Returns a \\DOMNodeList of all child elements of the element.","long_desc":"","hint":[["\\DOMNodeList",false]],"hint_desc":"(Traversable) of all child elements","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":[]},"getChildNodes":{"name":"getChildNodes","line":64,"short_desc":"Returns a \\DOMNodeList of all child elements of the element.","long_desc":"","hint":[["\\DOMNodeList",false]],"hint_desc":"of all child elements","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":[]},"getAttributeValue":{"name":"getAttributeValue","line":84,"short_desc":"Returns the value of the given attribute or returns the given default value if the attribute is missing.","long_desc":"","hint":[["mixed",false]],"hint_desc":"string value of attribute or default_value if attribute is not found or empty","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":{"name":{"name":"name","line":84,"short_desc":"name of attribute","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false},"default_value":{"name":"default_value","line":84,"short_desc":"value to return if attribute is missing","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":"","default":"null","is_by_ref":false}}},"getAttributes":{"name":"getAttributes","line":100,"short_desc":"Returns all attributes including their values for the element.","long_desc":"","hint":[["array",false]],"hint_desc":"of attributes (name => value pairs)","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":[]},"get":{"name":"get","line":119,"short_desc":"Returns all child elements of the given name or all children of the element if name is not specified.","long_desc":"","hint":[["\\DOMNodeList",false]],"hint_desc":"of all children","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":{"name":{"name":"name","line":119,"short_desc":"name of child elements to get","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}},"has":{"name":"has","line":136,"short_desc":"Determines whether there are children of the element with the given name.","long_desc":"","hint":[["bool",false]],"hint_desc":"true if children of that name exist on the element","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":{"name":{"name":"name","line":136,"short_desc":"name of child element to check","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}},"hasChild":{"name":"hasChild","line":148,"short_desc":"Determines whether there's at least one child node with the given name.","long_desc":"","hint":[["bool",false]],"hint_desc":"true, if a first child with that name exists","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":{"name":{"name":"name","line":148,"short_desc":"name of child node","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}},"getChild":{"name":"getChild","line":160,"short_desc":"Returns first child of the element with the given name.","long_desc":"","hint":[["\\DOMNode",false]],"hint_desc":"first child node with the given name","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":{"name":{"name":"name","line":160,"short_desc":"name of element to get","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}},"hasChildren":{"name":"hasChildren","line":181,"short_desc":"Determines whether there are children of the element with the given name.","long_desc":"","hint":[["bool",false]],"hint_desc":"true if children of that name exist on the element","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":{"name":{"name":"name","line":181,"short_desc":"name of child element to check","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}},"countChildren":{"name":"countChildren","line":196,"short_desc":"Returns the count of the children with the given name.","long_desc":"Special handling for the following names is implemented:\n- 'paramaters' returns count of all direct 'parameters' OR all 'parameters\/parameter' child nodes\n- 'formatters' returns count of all direct 'formatters' OR all 'formatters\/formatter' child nodes","hint":[["int",false]],"hint_desc":"number of child elements of the given name","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":{"name":{"name":"name","line":196,"short_desc":"element name","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}},"getChildren":{"name":"getChildren","line":237,"short_desc":"Returns all child elements of the given name.","long_desc":"Special handling for the following names is implemented:\n- 'paramaters' returns all direct 'parameters' OR all 'parameters\/parameter' child nodes\n- 'formatters' returns all direct 'formatters' OR all 'formatters\/formatter' child nodes","hint":[["\\DOMNodeList",false]],"hint_desc":"of all child elements with the given name in the default namespace","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":{"name":{"name":"name","line":237,"short_desc":"name of child element","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}},"hasParameters":{"name":"hasParameters","line":272,"short_desc":"Determine whether there's a 'parameters' element as child of the element.","long_desc":"","hint":[["boolean",false]],"hint_desc":"true if there is a 'parameters' element","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":[]},"getParameters":{"name":"getParameters","line":289,"short_desc":"Returns all (nested) parameters of the element as an associative array.","long_desc":"","hint":[["array",false]],"hint_desc":"of associative nested parameters (numerical keys where a 'name' attribute is missing)","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"errors":[],"parameters":{"default":{"name":"default","line":289,"short_desc":"array to be used as default","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","is_by_ref":false},"literalize":{"name":"literalize","line":289,"short_desc":"whether or not to literalize values like 'true'\/'false' by default","long_desc":null,"hint":[["boolean",false]],"tags":[],"modifiers":"","default":"true","is_by_ref":false}}},"literalize":{"name":"literalize","line":361,"short_desc":"Returns the literalized value, that is: - 'on|yes|true' will be boolean TRUE - 'off|no|false' will be boolean FALSE - '' will be NULL","long_desc":"All other non-string values will be returned as is.","hint":[["mixed",false]],"hint_desc":"null or boolean value or the original value of it's not a string","tags":[],"modifiers":"9","is_by_ref":"","exceptions":[],"errors":[],"parameters":{"value":{"name":"value","line":361,"short_desc":"value to literalize","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}}},"constants":[]}