{"name":"Environaut\\Checks\\PhpSettingCheck","line":30,"short_desc":"This check compares PHP runtime configuration options (from php.ini etc.) against given values.","long_desc":"The following comparison operations are supported:\n - \"equals\": the default comparison; checks whether the setting is exactly as given (e.g. \"foo\")\n - \"null\": checks whether the setting is NULL\n - \"notempty\": checks whether the setting has a value set (that is, not null or empty string)\n - \"version\": checks how versions compare (e.g. \"=>2.6.30\")\n - \"regex\": checks whether the PHP setting's value matches the given regular expression (e.g. \"\/file\\.ini\/\"\n - \"integer\": checks whether the integer or byte value of the PHP setting is correct (e.g. \">30\" or \">=256M\")\n\n By default the name of the check will be used as the PHP runtime setting name to check. For integer\n or byte values that may be set to infinite values (like \"-1\" or \"0\") you can specify the setting's\n infite value via the \"infinite\" parameter. The comparison operation is \"equals\" by default and\n may be specified via the \"comparison\" parameter.\n\n All supported parameters are:\n - \"setting\": name of setting to check (defaults to the \"name\" of the check)\n - \"custom_name\": name to be used for messages if the check's name is used as setting name\n - \"value\": the value to compare the setting's value against\n - \"infinite\": the infinite value of the setting to check (e.g. \"-1\" or \"0\" for integer or byte values)\n - \"comparison\": the comparison operation to use (see above)\n - \"help\": message to display when the setting's value is not correct","hint":null,"tags":[],"namespace":"Environaut\\Checks","file":"\/home\/graste\/projects\/environaut\/src\/Environaut\/Checks\/PhpSettingCheck.php","hash":"e6dea42ae15725b85710597c071cd956282df718","parent":"Environaut\\Checks\\Check","modifiers":0,"is_interface":false,"aliases":{"Check":"Environaut\\Checks\\Check"},"interfaces":[],"properties":[],"methods":{"getDefaultGroupName":{"name":"getDefaultGroupName","line":43,"short_desc":"Returns the default group name this check uses when none is specified.","long_desc":"","hint":[["string",false]],"hint_desc":"default group name of the check","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"parameters":[]},"run":{"name":"run","line":48,"short_desc":"Execute the check and add messages and settings to the result.","long_desc":"","hint":[["boolean",false]],"hint_desc":"true if check succeeded; false otherwise","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"parameters":[]},"getSupportedComparisons":{"name":"getSupportedComparisons","line":193,"short_desc":"Returns the supported comparison names that may be used in comparison operations.","long_desc":"","hint":[["array",false]],"hint_desc":"of strings (supported comparison names)","tags":[],"modifiers":"9","is_by_ref":"","exceptions":[],"parameters":[]},"compareIntegers":{"name":"compareIntegers","line":215,"short_desc":"Compares the given values according to the comparison operator the second value might have and returns whether the evaluation is true.","long_desc":"","hint":[["bool",false]],"hint_desc":"true if comparison is okay; false otherwise.","tags":[],"modifiers":"9","is_by_ref":"","exceptions":[],"parameters":{"value":{"name":"value","line":215,"short_desc":"integer value that is set in php.ini (e.g. \"8M\")","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false},"setting_value":{"name":"setting_value","line":215,"short_desc":"comparison value as string (e.g. \">=8M\")","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}},"getOperator":{"name":"getOperator","line":256,"short_desc":"Returns the comparison operator part of the given value.","long_desc":"Valid known\n comparison operators are: \"<\", \">\", \"<=\", \">=\", \"!=\" and \"=\".\n By default a \">=\" will be returned (if no comparison operator is found).","hint":[["string",false]],"hint_desc":"operator string found","tags":[],"modifiers":"9","is_by_ref":"","exceptions":[],"parameters":{"value":{"name":"value","line":256,"short_desc":"string that might contain a comparison operator (e.g. \"<=2M\")","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}},"getIntegerValue":{"name":"getIntegerValue","line":289,"short_desc":"Returns the integer value of the given value.","long_desc":"","hint":[["int",false]],"hint_desc":"integer value as PHP interprets it on ini settings","tags":[],"modifiers":"9","is_by_ref":"","exceptions":[],"parameters":{"value":{"name":"value","line":289,"short_desc":"string to interpret (e.g. \">=2.75M\")","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}}},"constants":{"DEFAULT_CUSTOM_GROUP_NAME":{"name":"DEFAULT_CUSTOM_GROUP_NAME","line":36,"short_desc":"Default group name used in messages of the report.","long_desc":"By default also used as default setting group name if not customized."}}}